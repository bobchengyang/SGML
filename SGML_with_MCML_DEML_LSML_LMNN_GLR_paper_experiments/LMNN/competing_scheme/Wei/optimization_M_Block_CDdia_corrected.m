function [ M, lr ] = optimization_M_Block_CDdia_corrected(...
    partial_sample,...
    targets_ind,...
    same_label,...
    lr,...
    lower_bounds,...
    n_feature,...
    M,...
    S_upper,...
    tol_set,...
    partial_feature,...
    dia_idx,...
    G)

tol = Inf;

counter = 0;

objective_previous = lmnn_obj(targets_ind,same_label,M,partial_feature,partial_sample);

while tol > tol_set
    
    [G1] = lmnn_gradient(diag(G)',targets_ind,...
        same_label,...
        M,...
        partial_feature,...
        partial_sample,...
        n_feature,...
        0,...
        0,...
        0,...
        n_feature);
    G1=G1';
    M_diagonal = diag(M) - lr * G1;
    
    M_diagonal=max([M_diagonal lower_bounds],[],2);
    
    if sum(M_diagonal)>S_upper
        [M_diagonal]=optimization_M_clipping(M_diagonal,lower_bounds,S_upper);
    end
    
    M(dia_idx) = real(M_diagonal);
    
    objective_current = lmnn_obj(targets_ind,same_label,M,partial_feature,partial_sample);
    
    if objective_current>objective_previous
        lr=lr/2;
    else
        lr=lr*(1+1e-2);
    end
    
    tol = norm(objective_current - objective_previous);
    counter = counter + 1;
    objective_previous = objective_current;
    if counter>1e3 % not converged
        break
    end
end

end
