function [ class_result, ...
    error_matrix, ...
    weights_result, ...
    GT_obj, ...
    final_obj, ...
    error_result,obj_vec,time_vec] = ...
    optimization_M_one_against_one_BCD( noc, ...
    fold_i, ...
    oao_combo, ...
    feature, ...
    class, ...
    train, ...
    test, ...
    class_result, ...
    error_matrix, ...
    weights_result, ...
    GT_obj, ...
    final_obj, ...
    error_result, ...
    S_upper,...
    rho,...
    epsilon,...
    proportion_factor,...
    proportion_threshold,...
    tol_set_prepro,...
    tol_main,...
    tol_diagonal,...
    tol_offdiagonal,...
    step_scale,...
    step_scale_od)
%ONE_AGAINST_ONE Summary of this function goes here
%   Detailed explanation goes here

current_oao_portion = 0;

for class_left_one = 1:oao_combo
    
    class_right_one = -class_left_one;
    
    current_oao_portion = current_oao_portion + 1;
    
    [ class_result, ...
        error_matrix, ...
        weights_result, ...
        GT_obj, ...
        final_obj, ...
        error_result,obj_vec,time_vec] = ...
        optimization_M_one_against_one_binary_R_Block_CD( fold_i, ...
        feature, ...
        class, ...
        train, ...
        test, ...
        class_left_one, ...
        class_right_one, ...
        current_oao_portion, ...
        class_result, ...
        error_matrix, ...
        weights_result, ...
        GT_obj, ...
        final_obj, ...
        error_result,...
        S_upper,...
        rho,...
        epsilon,...
        proportion_factor,...
        proportion_threshold,...
        tol_set_prepro,...
        tol_main,...
        tol_diagonal,...
        tol_offdiagonal,...
        step_scale,...
        step_scale_od);
    
end

end

