function [M,obj] = optimization_M_blue_red(...
    n_feature,...
    partial_feature,...
    lobpcg_random_control,...
    epsilon,...
    S_upper,...
    partial_observation,...
    tol_offdiagonal,...
    rho,...
    league_vec,...
    tol_golden_search,...
    bins,...
    M)

rng(lobpcg_random_control);
[M_current_eigenvector] = ...
    optimization_M_lobpcg(randn(n_feature,1),M,1e-12,200);

scaled_M=zeros(n_feature);
scaled_factors=zeros(n_feature);

for bins_i = 1:length(unique(bins))
    M_current = M(bins==bins_i,bins==bins_i);
    temp_dim=size(M_current,1);
    if temp_dim~=1
        [M_current_eigenvector] = ...
            optimization_M_lobpcg(M_current_eigenvector,M_current,1e-12,200);
        
        scaling_matrix_0 = diag(1./M_current_eigenvector(:,1));
        scaling_matrix_0_inv = diag(M_current_eigenvector(:,1));
        scaled_M_0 = scaling_matrix_0 * M_current * scaling_matrix_0_inv;
        scaled_factors_0 = scaling_matrix_0 * ones(temp_dim) * scaling_matrix_0_inv;
        
        scaled_M(bins==bins_i,bins==bins_i)=scaled_M_0;
        scaled_factors(bins==bins_i,bins==bins_i)=scaled_factors_0;
        
    else
        scaled_M(bins==bins_i,bins==bins_i)=M_current;
        scaled_factors(bins==bins_i,bins==bins_i)=1;
        
    end
end

[ M, obj] = ...
    optimization_M_MLjournal_subgraph_greed_seed(partial_feature,...
    n_feature,...
    partial_observation,...
    M,...
    scaled_M,...
    bins,...
    scaled_factors,...
    rho,...
    tol_offdiagonal,...
    M_current_eigenvector,...
    league_vec,...
    lobpcg_random_control,...
    tol_golden_search,...
    S_upper);

end

